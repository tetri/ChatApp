@page
@model IndexModel
@{
    ViewData["Title"] = "Chat em tempo real";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div id="messagesList"></div>
            <input type="text" id="userInput" placeholder="Nome" />
            <input type="text" id="messageInput" placeholder="Mensagem" />
            <button onclick="sendMessage()">Enviar</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            if (!message)
                return;

            const div = document.createElement("div");
            div.className = "message";

            const userSpan = document.createElement("span");
            userSpan.textContent = user || "Anônimo";
            userSpan.className = "user";

            const timeSpan = document.createElement("span");
            timeSpan.textContent = new Date(Date.now()).toLocaleString();
            timeSpan.className = "datetime"

            const msg = document.createElement("p");
            msg.className = "text";
            msg.textContent = message;

            div.appendChild(userSpan);
            div.appendChild(timeSpan);
            div.appendChild(msg);

            document.getElementById("messagesList").appendChild(div);
        });

        connection.start().catch(err => console.error(err.toString()));

        function sendMessage() {
            const user = document.getElementById("userInput").value;
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
        }
    </script>
}
